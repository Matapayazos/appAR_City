{
  "version": 3,
  "file": "angular-calendar-week-hours-view.js",
  "sources": [
    "ng://angular-calendar-week-hours-view/out/src/app/modules/calendar-week-hours-view/calendar-week-hours-view.module.ts",
    "ng://angular-calendar-week-hours-view/out/src/app/modules/calendar-week-hours-view/calendar-week-hours-view-header.component.ts",
    "ng://angular-calendar-week-hours-view/out/src/app/modules/calendar-week-hours-view/calendar-week-hours-day-view-hour-segment.component.ts",
    "ng://angular-calendar-week-hours-view/out/src/app/modules/calendar-week-hours-view/calendar-week-hours-day-view.component.ts",
    "ng://angular-calendar-week-hours-view/out/src/app/modules/calendar-week-hours-view/calendar-week-hours-view-event.component.ts",
    "ng://angular-calendar-week-hours-view/out/src/app/modules/calendar-week-hours-view/calendar-week-hours-view.component.ts"
  ],
  "sourcesContent": [
    "import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CalendarWeekHoursViewComponent} from './calendar-week-hours-view.component';\nimport {CalendarModule} from 'angular-calendar';\nimport {CalendarWeekHoursViewEventComponent} from './calendar-week-hours-view-event.component';\nimport {CalendarWeekHoursDayViewComponent} from './calendar-week-hours-day-view.component';\nimport {CalendarWeekHoursDayViewHourSegmentComponent} from './calendar-week-hours-day-view-hour-segment.component';\nimport {CalendarWeekHoursViewHeaderComponent} from './calendar-week-hours-view-header.component';\nimport {ResizableModule} from 'angular-resizable-element';\nimport {DragAndDropModule} from 'angular-draggable-droppable';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        CalendarModule,\n        ResizableModule,\n        DragAndDropModule\n    ],\n    declarations: [\n        CalendarWeekHoursViewComponent,\n        CalendarWeekHoursViewHeaderComponent,\n        CalendarWeekHoursViewEventComponent,\n        CalendarWeekHoursDayViewComponent,\n        CalendarWeekHoursDayViewHourSegmentComponent\n    ],\n    exports: [\n        CalendarWeekHoursViewComponent,\n        CalendarWeekHoursViewHeaderComponent,\n        CalendarWeekHoursViewEventComponent,\n        CalendarWeekHoursDayViewComponent,\n        CalendarWeekHoursDayViewHourSegmentComponent\n    ]\n})\nexport class CalendarWeekHoursViewModule {\n}\n",
    "import {Component, EventEmitter, Input, Output, TemplateRef} from '@angular/core';\nimport {CalendarEvent, WeekDay} from 'calendar-utils';\n\n@Component({\n    selector: 'iq-calendar-week-hours-view-header',\n    template: `\n        <ng-template\n            #defaultTemplate\n            let-days=\"days\"\n            let-locale=\"locale\"\n            let-dayHeaderClicked=\"dayHeaderClicked\"\n            let-eventDropped=\"eventDropped\">\n            <div class=\"cal-day-headers\">\n                <div class=\"cal-header\">\n                </div>\n                <div\n                    class=\"cal-header\"\n                    *ngFor=\"let day of days\"\n                    [class.cal-past]=\"day.isPast\"\n                    [class.cal-today]=\"day.isToday\"\n                    [class.cal-future]=\"day.isFuture\"\n                    [class.cal-weekend]=\"day.isWeekend\"\n                    [class.cal-drag-over]=\"day.dragOver\"\n                    [ngClass]=\"day.cssClass\"\n                    (mwlClick)=\"dayHeaderClicked.emit({day: day})\"\n                    mwlDroppable\n                    (dragEnter)=\"day.dragOver = true\"\n                    (dragLeave)=\"day.dragOver = false\"\n                    (drop)=\"day.dragOver = false; eventDropped.emit({event: $event.dropData.event, newStart: day.date})\">\n                    <b>{{ day.date | calendarDate:'weekViewColumnHeader':locale }}</b><br>\n                    <span>{{ day.date | calendarDate:'weekViewColumnSubHeader':locale }}</span>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n            [ngTemplateOutletContext]=\"{days: days, locale: locale, dayHeaderClicked: dayHeaderClicked, eventDropped: eventDropped}\">\n        </ng-template>\n    `\n})\nexport class CalendarWeekHoursViewHeaderComponent {\n    @Input() days: WeekDay[];\n\n    @Input() locale: string;\n\n    @Input() customTemplate: TemplateRef<any>;\n\n    @Output()\n    dayHeaderClicked: EventEmitter<{ day: WeekDay }> = new EventEmitter<{\n        day: WeekDay;\n    }>();\n\n    @Output()\n    eventDropped: EventEmitter<{\n        event: CalendarEvent;\n        newStart: Date;\n    }> = new EventEmitter<{ event: CalendarEvent; newStart: Date }>();\n}\n",
    "import {Component, Input, TemplateRef} from '@angular/core';\nimport {DayViewHourSegment} from 'calendar-utils';\n\n@Component({\n    selector: 'iq-calendar-week-hours-day-view-hour-segment',\n    template: `\n        <ng-template\n            #defaultTemplate\n            let-segment=\"segment\"\n            let-locale=\"locale\">\n            <div\n                class=\"cal-hour-segment\"\n                [style.height.px]=\"segmentHeight\"\n                [class.cal-hour-start]=\"segment.isStart\"\n                [class.cal-after-hour-start]=\"!segment.isStart\"\n                [ngClass]=\"segment.cssClass\">\n                <div class=\"cal-time\" *ngIf=\"hourVisible\">\n                    {{ segment.date | calendarDate:'dayViewHour':locale }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n            [ngTemplateOutletContext]=\"{\n        segment: segment,\n        locale: locale\n      }\">\n        </ng-template>\n    `\n})\nexport class CalendarWeekHoursDayViewHourSegmentComponent {\n    @Input() segment: DayViewHourSegment;\n\n    @Input() segmentHeight: number;\n\n    @Input() locale: string;\n\n    @Input() customTemplate: TemplateRef<any>;\n\n    @Input() hourVisible = true;\n}\n",
    "import {\n    ChangeDetectorRef, Component, EventEmitter, Inject, Input, LOCALE_ID, OnChanges, OnDestroy, OnInit, Output,\n    TemplateRef\n} from '@angular/core';\nimport {CalendarEvent, DayView, DayViewEvent, DayViewHour, DayViewHourSegment} from 'calendar-utils';\nimport {Subject} from 'rxjs/Subject';\nimport {Subscription} from 'rxjs/Subscription';\nimport {ResizeEvent} from 'angular-resizable-element';\nimport {addMinutes} from 'date-fns';\nimport {CalendarEventTimesChangedEvent, CalendarUtils} from 'angular-calendar';\nimport {validateEvents} from 'angular-calendar/modules/common/util';\nimport {CalendarResizeHelper} from 'angular-calendar/modules/common/calendar-resize-helper.provider';\nimport {CalendarDragHelper} from 'angular-calendar/modules/common/calendar-drag-helper.provider';\n\n/**\n * @hidden\n */\nconst MINUTES_IN_HOUR = 60;\n\n/**\n * @hidden\n */\nexport interface DayViewEventResize {\n    originalTop: number;\n    originalHeight: number;\n    edge: string;\n}\n\n/**\n * Shows all events on a given day. Example usage:\n *\n * ```typescript\n * <mwl-calendar-day-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-day-view>\n * ```\n */\n@Component({\n    selector: 'iq-calendar-week-hours-day-view',\n    template: `\n        <div class=\"cal-day-view\" #dayViewContainer>\n            <mwl-calendar-all-day-event\n                *ngFor=\"let event of view.allDayEvents\"\n                [event]=\"event\"\n                [customTemplate]=\"allDayEventTemplate\"\n                [eventTitleTemplate]=\"eventTitleTemplate\"\n                (eventClicked)=\"eventClicked.emit({event: event})\">\n            </mwl-calendar-all-day-event>\n            <div class=\"cal-hour-rows\">\n                <div class=\"cal-events\">\n                    <div\n                        #event\n                        *ngFor=\"let dayEvent of view?.events\"\n                        class=\"cal-event-container\"\n                        [class.cal-draggable]=\"dayEvent.event.draggable\"\n                        [class.cal-starts-within-day]=\"!dayEvent.startsBeforeDay\"\n                        [class.cal-ends-within-day]=\"!dayEvent.endsAfterDay\"\n                        [ngClass]=\"dayEvent.event.cssClass\"\n                        mwlResizable\n                        [resizeEdges]=\"{top: dayEvent.event?.resizable?.beforeStart, bottom: dayEvent.event?.resizable?.afterEnd}\"\n                        [resizeSnapGrid]=\"{top: eventSnapSize, bottom: eventSnapSize}\"\n                        [validateResize]=\"validateResize\"\n                        (resizeStart)=\"resizeStarted(dayEvent, $event, dayViewContainer)\"\n                        (resizing)=\"resizing(dayEvent, $event)\"\n                        (resizeEnd)=\"resizeEnded(dayEvent)\"\n                        mwlDraggable\n                        [dragAxis]=\"{x: false, y: dayEvent.event.draggable && currentResizes.size === 0}\"\n                        [dragSnapGrid]=\"{y: eventSnapSize}\"\n                        [validateDrag]=\"validateDrag\"\n                        (dragStart)=\"dragStart(event, dayViewContainer)\"\n                        (dragEnd)=\"eventDragged(dayEvent, $event.y)\"\n                        [style.marginTop.px]=\"dayEvent.top\"\n                        [style.height.px]=\"dayEvent.height\"\n                        [style.marginLeft.px]=\"dayEvent.left\"\n                        [style.width.px]=\"dayEvent.width - 1\">\n                        <mwl-calendar-day-view-event\n                            [dayEvent]=\"dayEvent\"\n                            [tooltipPlacement]=\"tooltipPlacement\"\n                            [tooltipTemplate]=\"tooltipTemplate\"\n                            [tooltipAppendToBody]=\"tooltipAppendToBody\"\n                            [customTemplate]=\"eventTemplate\"\n                            [eventTitleTemplate]=\"eventTitleTemplate\"\n                            (eventClicked)=\"eventClicked.emit({event: dayEvent.event})\">\n                        </mwl-calendar-day-view-event>\n                    </div>\n                    <div class=\"cal-hour\"\n                         [class.cal-week-hour-even]=\"i % 2 === 0\"\n                         [class.cal-week-hour-odd]=\"i % 2 === 1\"\n                         *ngFor=\"let hour of hours; let i = index\">\n                        <iq-calendar-week-hours-day-view-hour-segment\n                            *ngFor=\"let segment of hour.segments\"\n                            [hourVisible]=\"false\"\n                            [style.height.px]=\"hourSegmentHeight\"\n                            [segment]=\"segment\"\n                            [segmentHeight]=\"hourSegmentHeight\"\n                            [locale]=\"locale\"\n                            [customTemplate]=\"hourSegmentTemplate\"\n                            (mwlClick)=\"hourSegmentClicked.emit({date: segment.date})\"\n                            [class.cal-drag-over]=\"segment.dragOver\"\n                            mwlDroppable\n                            (dragEnter)=\"segment.dragOver = true\"\n                            (dragLeave)=\"segment.dragOver = false\"\n                            (drop)=\"segment.dragOver = false; eventDropped($event, segment)\">\n                        </iq-calendar-week-hours-day-view-hour-segment>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    `\n})\nexport class CalendarWeekHoursDayViewComponent\n    implements OnChanges, OnInit, OnDestroy {\n    /**\n     * The current view date\n     */\n    @Input() viewDate: Date;\n\n    /**\n     * An array of events to display on view\n     * The schema is available here:\n     * https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n     */\n    @Input() events: CalendarEvent[] = [];\n\n    /**\n     * The number of segments in an hour. Must be <= 6\n     */\n    @Input() hourSegments = 2;\n\n    /**\n     * The height in pixels of each hour segment\n     */\n    @Input() hourSegmentHeight = 30;\n\n    /**\n     * The day start hours in 24 hour time. Must be 0-23\n     */\n    @Input() dayStartHour = 0;\n\n    /**\n     * The day start minutes. Must be 0-59\n     */\n    @Input() dayStartMinute = 0;\n\n    /**\n     * The day end hours in 24 hour time. Must be 0-23\n     */\n    @Input() dayEndHour = 23;\n\n    /**\n     * The day end minutes. Must be 0-59\n     */\n    @Input() dayEndMinute = 59;\n\n    /**\n     * The width in pixels of each event on the view\n     */\n    @Input() eventWidth = 150;\n\n    /**\n     * An observable that when emitted on will re-render the current view\n     */\n    @Input() refresh: Subject<any>;\n\n    /**\n     * The locale used to format dates\n     */\n    @Input() locale: string;\n\n    /**\n     * The grid size to snap resizing and dragging of events to\n     */\n    @Input() eventSnapSize: number = this.hourSegmentHeight;\n\n    /**\n     * The placement of the event tooltip\n     */\n    @Input() tooltipPlacement = 'top';\n\n    /**\n     * A custom template to use for the event tooltips\n     */\n    @Input() tooltipTemplate: TemplateRef<any>;\n\n    /**\n     * Whether to append tooltips to the body or next to the trigger element\n     */\n    @Input() tooltipAppendToBody = true;\n\n    /**\n     * A custom template to use to replace the hour segment\n     */\n    @Input() hourSegmentTemplate: TemplateRef<any>;\n\n    /**\n     * A custom template to use for all day events\n     */\n    @Input() allDayEventTemplate: TemplateRef<any>;\n\n    /**\n     * A custom template to use for day view events\n     */\n    @Input() eventTemplate: TemplateRef<any>;\n\n    /**\n     * A custom template to use for event titles\n     */\n    @Input() eventTitleTemplate: TemplateRef<any>;\n\n    /**\n     * Called when an event title is clicked\n     */\n    @Output()\n    eventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{\n        event: CalendarEvent;\n    }>();\n\n    /**\n     * Called when an hour segment is clicked\n     */\n    @Output()\n    hourSegmentClicked: EventEmitter<{ date: Date }> = new EventEmitter<{\n        date: Date;\n    }>();\n\n    /**\n     * Called when an event is resized or dragged and dropped\n     */\n    @Output()\n    eventTimesChanged: EventEmitter<CalendarEventTimesChangedEvent> = new EventEmitter<CalendarEventTimesChangedEvent>();\n\n    /**\n     * An output that will be called before the view is rendered for the current day.\n     * If you add the `cssClass` property to a segment it will add that class to the hour segment in the template\n     */\n    @Output()\n    beforeViewRender: EventEmitter<{ body: DayViewHour[] }> = new EventEmitter();\n\n    /**\n     * @hidden\n     */\n    hours: DayViewHour[] = [];\n\n    /**\n     * @hidden\n     */\n    view: DayView;\n\n    /**\n     * @hidden\n     */\n    width = 0;\n\n    /**\n     * @hidden\n     */\n    refreshSubscription: Subscription;\n\n    /**\n     * @hidden\n     */\n    currentResizes: Map<DayViewEvent, DayViewEventResize> = new Map();\n\n    /**\n     * @hidden\n     */\n    validateDrag: (args: any) => boolean;\n\n    /**\n     * @hidden\n     */\n    validateResize: (args: any) => boolean;\n\n    /**\n     * @hidden\n     */\n    constructor(private cdr: ChangeDetectorRef,\n                private utils: CalendarUtils,\n                @Inject(LOCALE_ID) locale: string) {\n        this.locale = locale;\n    }\n\n    /**\n     * @hidden\n     */\n    ngOnInit(): void {\n        if (this.refresh) {\n            this.refreshSubscription = this.refresh.subscribe(() => {\n                this.refreshAll();\n                this.cdr.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    ngOnDestroy(): void {\n        if (this.refreshSubscription) {\n            this.refreshSubscription.unsubscribe();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes: any): void {\n        if (\n            changes.viewDate ||\n            changes.dayStartHour ||\n            changes.dayStartMinute ||\n            changes.dayEndHour ||\n            changes.dayEndMinute\n        ) {\n            this.refreshHourGrid();\n        }\n\n        if (changes.events) {\n            validateEvents(this.events);\n        }\n\n        if (\n            changes.viewDate ||\n            changes.events ||\n            changes.dayStartHour ||\n            changes.dayStartMinute ||\n            changes.dayEndHour ||\n            changes.dayEndMinute ||\n            changes.eventWidth\n        ) {\n            this.refreshView();\n        }\n    }\n\n    eventDropped(dropEvent: { dropData?: { event?: CalendarEvent } },\n                 segment: DayViewHourSegment): void {\n        if (dropEvent.dropData && dropEvent.dropData.event) {\n            this.eventTimesChanged.emit({\n                event: dropEvent.dropData.event,\n                newStart: segment.date\n            });\n        }\n    }\n\n    resizeStarted(event: DayViewEvent,\n                  resizeEvent: ResizeEvent,\n                  dayViewContainer: HTMLElement): void {\n        this.currentResizes.set(event, {\n            originalTop: event.top,\n            originalHeight: event.height,\n            edge: typeof resizeEvent.edges.top !== 'undefined' ? 'top' : 'bottom'\n        });\n        const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(\n            dayViewContainer\n        );\n        this.validateResize = ({rectangle}) =>\n            resizeHelper.validateResize({rectangle});\n        this.cdr.markForCheck();\n    }\n\n    resizing(event: DayViewEvent, resizeEvent: ResizeEvent): void {\n        const currentResize: DayViewEventResize = this.currentResizes.get(event);\n        if (resizeEvent.edges.top) {\n            event.top = currentResize.originalTop + +resizeEvent.edges.top;\n            event.height = currentResize.originalHeight - +resizeEvent.edges.top;\n        } else if (resizeEvent.edges.bottom) {\n            event.height = currentResize.originalHeight + +resizeEvent.edges.bottom;\n        }\n    }\n\n    resizeEnded(dayEvent: DayViewEvent): void {\n        const currentResize: DayViewEventResize = this.currentResizes.get(dayEvent);\n\n        let pixelsMoved: number;\n        if (currentResize.edge === 'top') {\n            pixelsMoved = dayEvent.top - currentResize.originalTop;\n        } else {\n            pixelsMoved = dayEvent.height - currentResize.originalHeight;\n        }\n\n        dayEvent.top = currentResize.originalTop;\n        dayEvent.height = currentResize.originalHeight;\n\n        const pixelAmountInMinutes: number =\n            MINUTES_IN_HOUR / (this.hourSegments * this.hourSegmentHeight);\n        const minutesMoved: number = pixelsMoved * pixelAmountInMinutes;\n        let newStart: Date = dayEvent.event.start;\n        let newEnd: Date = dayEvent.event.end;\n        if (currentResize.edge === 'top') {\n            newStart = addMinutes(newStart, minutesMoved);\n        } else if (newEnd) {\n            newEnd = addMinutes(newEnd, minutesMoved);\n        }\n\n        this.eventTimesChanged.emit({newStart, newEnd, event: dayEvent.event});\n        this.currentResizes.delete(dayEvent);\n    }\n\n    dragStart(event: HTMLElement, dayViewContainer: HTMLElement): void {\n        const dragHelper: CalendarDragHelper = new CalendarDragHelper(\n            dayViewContainer,\n            event\n        );\n        this.validateDrag = ({x, y}) =>\n            this.currentResizes.size === 0 && dragHelper.validateDrag({x, y});\n        this.cdr.markForCheck();\n    }\n\n    eventDragged(dayEvent: DayViewEvent, draggedInPixels: number): void {\n        const pixelAmountInMinutes: number =\n            MINUTES_IN_HOUR / (this.hourSegments * this.hourSegmentHeight);\n        const minutesMoved: number = draggedInPixels * pixelAmountInMinutes;\n        // TODO - remove this check once https://github.com/mattlewis92/angular-draggable-droppable/issues/21 is fixed\n        if (minutesMoved !== 0) {\n            const newStart: Date = addMinutes(dayEvent.event.start, minutesMoved);\n            let newEnd: Date;\n            if (dayEvent.event.end) {\n                newEnd = addMinutes(dayEvent.event.end, minutesMoved);\n            }\n            this.eventTimesChanged.emit({newStart, newEnd, event: dayEvent.event});\n        }\n    }\n\n    private refreshHourGrid(): void {\n        this.hours = this.utils.getDayViewHourGrid({\n            viewDate: this.viewDate,\n            hourSegments: this.hourSegments,\n            dayStart: {\n                hour: this.dayStartHour,\n                minute: this.dayStartMinute\n            },\n            dayEnd: {\n                hour: this.dayEndHour,\n                minute: this.dayEndMinute\n            }\n        });\n        this.beforeViewRender.emit({\n            body: this.hours\n        });\n    }\n\n    private refreshView(): void {\n        const originalDayView = this.utils.getDayView({\n            events: this.events,\n            viewDate: this.viewDate,\n            hourSegments: this.hourSegments,\n            dayStart: {\n                hour: this.dayStartHour,\n                minute: this.dayStartMinute\n            },\n            dayEnd: {\n                hour: this.dayEndHour,\n                minute: this.dayEndMinute\n            },\n            eventWidth: this.eventWidth,\n            segmentHeight: this.hourSegmentHeight\n        });\n\n        originalDayView.events.forEach((event: any) => {\n            if (event.isProcessed) {\n                return;\n            }\n            this.scaleOverlappingEvents(event.event.start, event.event.end, originalDayView.events);\n        });\n\n        this.view = originalDayView;\n    }\n\n    private scaleOverlappingEvents(startTime: Date, endTime: Date, events): void {\n        let newStartTime: Date = startTime;\n        let newEndTime: Date = endTime;\n        const overlappingEvents: DayViewEvent[] = [];\n        let maxLeft = 0;\n        events.forEach((event) => {\n            if (event.isProcessed) {\n                return;\n            }\n            if (event.event.start < startTime && event.event.end > startTime) {\n                newStartTime = event.event.start;\n            } else if (event.event.end > endTime && event.event.start < endTime) {\n                newEndTime = event.event.end;\n            } else if (event.event.end <= endTime && event.event.start >= startTime) {\n                // Nothing, but remove condition and add equals to above two for overlapping effect\n            } else {\n                return;\n            }\n            if (event.left > maxLeft) {\n                maxLeft = event.left;\n            }\n            overlappingEvents.push(event);\n        });\n        if (startTime === newStartTime && endTime === newEndTime) {\n            const divisorFactor = Math.floor(maxLeft / this.eventWidth) + 1;\n            overlappingEvents.forEach((event: any) => {\n                event.isProcessed = true;\n                event.left /= divisorFactor;\n                event.width /= divisorFactor;\n            });\n        } else {\n            this.scaleOverlappingEvents(newStartTime, newEndTime, events);\n        }\n    }\n\n    private refreshAll(): void {\n        this.refreshHourGrid();\n        this.refreshView();\n    }\n}\n",
    "import {Component, EventEmitter, Input, Output, TemplateRef} from '@angular/core';\nimport {WeekViewEvent} from 'calendar-utils';\n\n@Component({\n  selector: 'iq-calendar-week-hours-view-event',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-weekEvent=\"weekEvent\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\">\n      <div\n        class=\"cal-event\"\n        [style.backgroundColor]=\"weekEvent.event.color.secondary\"\n        [mwlCalendarTooltip]=\"weekEvent.event.title | calendarEventTitle:'weekTooltip':weekEvent.event\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipEvent]=\"weekEvent.event\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipAppendToBody]=\"tooltipAppendToBody\">\n        <mwl-calendar-event-actions [event]=\"weekEvent.event\"></mwl-calendar-event-actions>\n        <mwl-calendar-event-title\n          [event]=\"weekEvent.event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          view=\"week\"\n          (mwlClick)=\"eventClicked.emit()\">\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        weekEvent: weekEvent,\n        tooltipPlacement: tooltipPlacement,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarWeekHoursViewEventComponent {\n  @Input() weekEvent: WeekViewEvent;\n\n  @Input() tooltipPlacement: string;\n\n  @Input() tooltipAppendToBody: boolean;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() eventClicked: EventEmitter<any> = new EventEmitter();\n}\n",
    "import {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    LOCALE_ID,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    TemplateRef\n} from '@angular/core';\nimport {CalendarEvent, DayViewHour, DayViewHourSegment, WeekDay, WeekViewEvent, WeekViewEventRow} from 'calendar-utils';\nimport {Subject} from 'rxjs/Subject';\nimport {ResizeEvent} from 'angular-resizable-element';\nimport {addDays} from 'date-fns';\nimport {Subscription} from 'rxjs/Subscription';\nimport {CalendarEventTimesChangedEvent, CalendarUtils} from 'angular-calendar';\nimport {WeekViewEventResize} from 'angular-calendar/modules/week/calendar-week-view.component';\nimport {validateEvents} from 'angular-calendar/modules/common/util';\nimport {CalendarResizeHelper} from 'angular-calendar/modules/common/calendar-resize-helper.provider';\nimport {CalendarDragHelper} from 'angular-calendar/modules/common/calendar-drag-helper.provider';\n\n@Component({\n    selector: 'iq-calendar-week-hours-view',\n    template: `\n        <div class=\"cal-week-hours-view\" #weekViewContainer>\n            <iq-calendar-week-hours-view-header\n                [days]=\"days\"\n                [locale]=\"locale\"\n                [customTemplate]=\"headerTemplate\"\n                (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\"\n                (eventDropped)=\"eventTimesChanged.emit($event)\">\n            </iq-calendar-week-hours-view-header>\n            <div class=\"cal-days-container\">\n                <div class=\"cal-day-container\">\n                    <div class=\"cal-day-view\">\n                        <div class=\"cal-hour-rows\">\n                            <div class=\"cal-events\">\n                                <div class=\"cal-hour\"\n                                     [class.cal-week-hour-even]=\"i % 2 === 0\"\n                                     [class.cal-week-hour-odd]=\"i % 2 === 1\"\n                                     *ngFor=\"let hour of hours; let i = index\">\n                                    <iq-calendar-week-hours-day-view-hour-segment\n                                        *ngFor=\"let segment of hour.segments\"\n                                        [style.height.px]=\"hourSegmentHeight\"\n                                        [segment]=\"segment\"\n                                        [segmentHeight]=\"hourSegmentHeight\"\n                                        [locale]=\"locale\"\n                                        [customTemplate]=\"hourSegmentTemplate\"\n                                        [class.cal-drag-over]=\"segment.dragOver\"\n                                        mwlDroppable\n                                        (dragEnter)=\"segment.dragOver = true\"\n                                        (dragLeave)=\"segment.dragOver = false\"\n                                        (drop)=\"segment.dragOver = false; eventDropped($event, segment)\">\n                                    </iq-calendar-week-hours-day-view-hour-segment>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"cal-day-container\"\n                     [class.cal-past]=\"day.isPast\"\n                     [class.cal-today]=\"day.isToday\"\n                     [class.cal-future]=\"day.isFuture\"\n                     *ngFor=\"let day of days\">\n                    <iq-calendar-week-hours-day-view [dayStartHour]=\"dayStartHour\"\n                                                     [dayStartMinute]=\"dayStartMinute\"\n                                                     [dayEndHour]=\"dayEndHour\"\n                                                     [dayEndMinute]=\"dayEndMinute\"\n                                                     [events]=\"events\"\n                                                     [viewDate]=\"day.date\"\n                                                     [hourSegments]=\"hourSegments\"\n                                                     [hourSegmentHeight]=\"hourSegmentHeight\"\n                                                     [eventWidth]=\"(weekViewContainer.offsetWidth / 8)\"\n                                                     (eventClicked)=\"eventClicked.emit($event)\"\n                                                     (hourSegmentClicked)=\"hourSegmentClicked.emit($event)\"\n                                                     (eventTimesChanged)=\"eventTimesChanged.emit($event)\"\n                                                     [eventTitleTemplate]=\"eventTitleTemplate\"\n                                                     [eventTemplate]=\"eventTemplate\">\n                    </iq-calendar-week-hours-day-view>\n                </div>\n            </div>\n        </div>\n    `\n})\nexport class CalendarWeekHoursViewComponent implements OnChanges, OnInit, OnDestroy {\n    /**\n     * The current view date\n     */\n    @Input() viewDate: Date;\n\n    /**\n     * An array of events to display on view\n     * The schema is available here:\n     * https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n     */\n    @Input() events: CalendarEvent[] = [];\n\n    /**\n     * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n     */\n    @Input() excludeDays: number[] = [];\n\n    /**\n     * An observable that when emitted on will re-render the current view\n     */\n    @Input() refresh: Subject<any>;\n\n    /**\n     * The locale used to format dates\n     */\n    @Input() locale: string;\n\n    /**\n     * The placement of the event tooltip\n     */\n    @Input() tooltipPlacement = 'bottom';\n\n    /**\n     * A custom template to use for the event tooltips\n     */\n    @Input() tooltipTemplate: TemplateRef<any>;\n\n    /**\n     * Whether to append tooltips to the body or next to the trigger element\n     */\n    @Input() tooltipAppendToBody = true;\n\n    /**\n     * The start number of the week\n     */\n    @Input() weekStartsOn: number;\n\n    /**\n     * A custom template to use to replace the header\n     */\n    @Input() headerTemplate: TemplateRef<any>;\n\n    /**\n     * A custom template to use for week view events\n     */\n    @Input() eventTemplate: TemplateRef<any>;\n\n    /**\n     * A custom template to use for event titles\n     */\n    @Input() eventTitleTemplate: TemplateRef<any>;\n\n    /**\n     * The precision to display events.\n     * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\n     */\n    @Input() precision: 'days' | 'minutes' = 'days';\n\n    /**\n     * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\n     */\n    @Input() weekendDays: number[];\n\n    /**\n     * The day start hours in 24 hour time. Must be 0-23\n     */\n    @Input() dayStartHour = 0;\n\n    /**\n     * The day start minutes. Must be 0-59\n     */\n    @Input() dayStartMinute = 0;\n\n    /**\n     * The day end hours in 24 hour time. Must be 0-23\n     */\n    @Input() dayEndHour = 23;\n\n    /**\n     * The day end minutes. Must be 0-59\n     */\n    @Input() dayEndMinute = 59;\n\n    /**\n     * The number of segments in an hour. Must be <= 6\n     */\n    @Input() hourSegments = 2;\n\n    /**\n     * The height in pixels of each hour segment\n     */\n    @Input() hourSegmentHeight = 30;\n\n    /**\n     * A custom template to use to replace the hour segment\n     */\n    @Input() hourSegmentTemplate: TemplateRef<any>;\n\n    /**\n     * Called when a header week day is clicked.\n     * Adding a `cssClass` property on `$event.day` will add that class to the header element\n     */\n    @Output()\n    dayHeaderClicked: EventEmitter<{ day: WeekDay }> = new EventEmitter<{\n        day: WeekDay;\n    }>();\n\n    /**\n     * Called when the event title is clicked\n     */\n    @Output()\n    eventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{\n        event: CalendarEvent;\n    }>();\n\n    /**\n     * Called when an hour segment is clicked\n     */\n    @Output()\n    hourSegmentClicked: EventEmitter<{ date: Date }> = new EventEmitter<{\n        date: Date;\n    }>();\n\n    /**\n     * Called when an event is resized or dragged and dropped\n     */\n    @Output()\n    eventTimesChanged: EventEmitter<CalendarEventTimesChangedEvent> = new EventEmitter<CalendarEventTimesChangedEvent>();\n\n    /**\n     * An output that will be called before the view is rendered for the current week.\n     * If you add the `cssClass` property to a day in the header it will add that class to the cell element in the template\n     */\n    @Output()\n    beforeViewRender: EventEmitter<{ header: WeekDay[] }> = new EventEmitter();\n\n    /**\n     * @hidden\n     */\n    hours: DayViewHour[] = [];\n\n    /**\n     * @hidden\n     */\n    days: WeekDay[];\n\n    /**\n     * @hidden\n     */\n    eventRows: WeekViewEventRow[] = [];\n\n    /**\n     * @hidden\n     */\n    refreshSubscription: Subscription;\n\n    /**\n     * @hidden\n     */\n    currentResizes: Map<WeekViewEvent, WeekViewEventResize> = new Map();\n\n    /**\n     * @hidden\n     */\n    validateDrag: (args: any) => boolean;\n\n    /**\n     * @hidden\n     */\n    validateResize: (args: any) => boolean;\n\n    /**\n     * @hidden\n     */\n    dayColumnWidth: number;\n\n    /**\n     * @hidden\n     */\n    constructor(private cdr: ChangeDetectorRef,\n                private utils: CalendarUtils,\n                @Inject(LOCALE_ID) locale: string) {\n        this.locale = locale;\n    }\n\n    /**\n     * @hidden\n     */\n    ngOnInit(): void {\n        if (this.refresh) {\n            this.refreshSubscription = this.refresh.subscribe(() => {\n                this.refreshAll();\n                this.cdr.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes: any): void {\n        if (changes.viewDate || changes.excludeDays || changes.weekendDays) {\n            this.refreshHeader();\n        }\n\n        if (changes.events) {\n            validateEvents(this.events);\n        }\n\n        if (changes.events || changes.viewDate || changes.excludeDays) {\n            this.refreshBody();\n        }\n\n        if (\n            changes.viewDate ||\n            changes.dayStartHour ||\n            changes.dayStartMinute ||\n            changes.dayEndHour ||\n            changes.dayEndMinute\n        ) {\n            this.refreshHourGrid();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    ngOnDestroy(): void {\n        if (this.refreshSubscription) {\n            this.refreshSubscription.unsubscribe();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    resizeStarted(weekViewContainer: HTMLElement,\n                  weekEvent: WeekViewEvent,\n                  resizeEvent: ResizeEvent): void {\n        this.currentResizes.set(weekEvent, {\n            originalOffset: weekEvent.offset,\n            originalSpan: weekEvent.span,\n            edge: typeof resizeEvent.edges.left !== 'undefined' ? 'left' : 'right'\n        });\n        this.dayColumnWidth = this.getDayColumnWidth(weekViewContainer);\n        const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(\n            weekViewContainer,\n            this.dayColumnWidth\n        );\n        this.validateResize = ({rectangle}) =>\n            resizeHelper.validateResize({rectangle});\n        this.cdr.markForCheck();\n    }\n\n    /**\n     * @hidden\n     */\n    resizing(weekEvent: WeekViewEvent,\n             resizeEvent: ResizeEvent,\n             dayWidth: number): void {\n        const currentResize: WeekViewEventResize = this.currentResizes.get(\n            weekEvent\n        );\n\n        if (resizeEvent.edges.left) {\n            const diff: number = Math.round(+resizeEvent.edges.left / dayWidth);\n            weekEvent.offset = currentResize.originalOffset + diff;\n            weekEvent.span = currentResize.originalSpan - diff;\n        } else if (resizeEvent.edges.right) {\n            const diff: number = Math.round(+resizeEvent.edges.right / dayWidth);\n            weekEvent.span = currentResize.originalSpan + diff;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    resizeEnded(weekEvent: WeekViewEvent): void {\n        const currentResize: WeekViewEventResize = this.currentResizes.get(\n            weekEvent\n        );\n\n        let daysDiff: number;\n        if (currentResize.edge === 'left') {\n            daysDiff = weekEvent.offset - currentResize.originalOffset;\n        } else {\n            daysDiff = weekEvent.span - currentResize.originalSpan;\n        }\n\n        weekEvent.offset = currentResize.originalOffset;\n        weekEvent.span = currentResize.originalSpan;\n\n        let newStart: Date = weekEvent.event.start;\n        let newEnd: Date = weekEvent.event.end;\n        if (currentResize.edge === 'left') {\n            newStart = addDays(newStart, daysDiff);\n        } else if (newEnd) {\n            newEnd = addDays(newEnd, daysDiff);\n        }\n\n        this.eventTimesChanged.emit({newStart, newEnd, event: weekEvent.event});\n        this.currentResizes.delete(weekEvent);\n    }\n\n    /**\n     * @hidden\n     */\n    eventDragged(weekEvent: WeekViewEvent,\n                 draggedByPx: number,\n                 dayWidth: number): void {\n        const daysDragged: number = draggedByPx / dayWidth;\n        // TODO - remove this check once https://github.com/mattlewis92/angular-draggable-droppable/issues/21 is fixed\n        if (daysDragged !== 0) {\n            const newStart: Date = addDays(weekEvent.event.start, daysDragged);\n            let newEnd: Date;\n            if (weekEvent.event.end) {\n                newEnd = addDays(weekEvent.event.end, daysDragged);\n            }\n\n            this.eventTimesChanged.emit({newStart, newEnd, event: weekEvent.event});\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    getDayColumnWidth(eventRowContainer: HTMLElement): number {\n        return Math.floor(eventRowContainer.offsetWidth / this.days.length);\n    }\n\n    /**\n     * @hidden\n     */\n    dragStart(weekViewContainer: HTMLElement, event: HTMLElement): void {\n        this.dayColumnWidth = this.getDayColumnWidth(weekViewContainer);\n        const dragHelper: CalendarDragHelper = new CalendarDragHelper(\n            weekViewContainer,\n            event\n        );\n        this.validateDrag = ({x, y}) =>\n            this.currentResizes.size === 0 && dragHelper.validateDrag({x, y});\n        this.cdr.markForCheck();\n    }\n\n    private refreshHeader(): void {\n        this.days = this.utils.getWeekViewHeader({\n            viewDate: this.viewDate,\n            weekStartsOn: this.weekStartsOn,\n            excluded: this.excludeDays,\n            weekendDays: this.weekendDays\n        });\n        this.beforeViewRender.emit({\n            header: this.days\n        });\n    }\n\n    private refreshBody(): void {\n        this.eventRows = this.utils.getWeekView({\n            events: this.events,\n            viewDate: this.viewDate,\n            weekStartsOn: this.weekStartsOn,\n            excluded: this.excludeDays,\n            precision: this.precision,\n            absolutePositionedEvents: true\n        }).eventRows;\n    }\n\n    private refreshHourGrid(): void {\n        this.hours = this.utils.getDayViewHourGrid({\n            viewDate: this.viewDate,\n            hourSegments: this.hourSegments,\n            dayStart: {\n                hour: this.dayStartHour,\n                minute: this.dayStartMinute\n            },\n            dayEnd: {\n                hour: this.dayEndHour,\n                minute: this.dayEndMinute\n            }\n        });\n    }\n\n    private refreshAll(): void {\n        this.refreshHeader();\n        this.refreshBody();\n        this.refreshHourGrid();\n    }\n\n    eventDropped(dropEvent: { dropData?: { event?: CalendarEvent } },\n                 segment: DayViewHourSegment): void {\n        if (dropEvent.dropData && dropEvent.dropData.event) {\n            this.eventTimesChanged.emit({\n                event: dropEvent.dropData.event,\n                newStart: segment.date\n            });\n        }\n    }\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
